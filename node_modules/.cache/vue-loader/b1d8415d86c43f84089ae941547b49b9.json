{"remainingRequest":"/home/msufyan/Desktop/Vue/vue-getting-started/xx-final/vue-heroes/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/msufyan/Desktop/Vue/vue-getting-started/xx-final/vue-heroes/src/views/villain-detail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/msufyan/Desktop/Vue/vue-getting-started/xx-final/vue-heroes/src/views/villain-detail.vue","mtime":1633337813766},{"path":"/home/msufyan/Desktop/Vue/vue-getting-started/xx-final/vue-heroes/node_modules/cache-loader/dist/cjs.js","mtime":1633525790131},{"path":"/home/msufyan/Desktop/Vue/vue-getting-started/xx-final/vue-heroes/node_modules/babel-loader/lib/index.js","mtime":1633525790671},{"path":"/home/msufyan/Desktop/Vue/vue-getting-started/xx-final/vue-heroes/node_modules/cache-loader/dist/cjs.js","mtime":1633525790131},{"path":"/home/msufyan/Desktop/Vue/vue-getting-started/xx-final/vue-heroes/node_modules/vue-loader/lib/index.js","mtime":1633525791335}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapActions, mapGetters } from 'vuex';\n\nexport default {\n  name: 'VillainDetail',\n  props: {\n    id: {\n      type: Number,\n      default: 0,\n    },\n  },\n  data() {\n    return {\n      villain: {},\n    };\n  },\n  created() {\n    if (this.isAddMode) {\n      this.villain = {\n        id: undefined,\n        firstName: '',\n        lastName: '',\n        description: '',\n      };\n    } else {\n      this.villain = { ...this.getVillainById(this.id) };\n    }\n  },\n  computed: {\n    ...mapGetters(['getVillainById']),\n    isAddMode() {\n      return !this.id;\n    },\n    title() {\n      return `${this.isAddMode ? 'Add' : 'Edit'} Villain`;\n    },\n  },\n  methods: {\n    ...mapActions(['updateVillainAction', 'addVillainAction']),\n    cancelVillain() {\n      this.$router.push({ name: 'villains' });\n    },\n    async saveVillain() {\n      this.villain.id\n        ? await this.updateVillainAction(this.villain)\n        : await this.addVillainAction(this.villain);\n      this.$router.push({ name: 'villains' });\n    },\n  },\n};\n",{"version":3,"sources":["villain-detail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"villain-detail.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <div class=\"section content-title-group\">\n      <h2 class=\"title\">{{ title }}</h2>\n      <div class=\"card\">\n        <header class=\"card-header\">\n          <p class=\"card-header-title\">{{ villain.fullName }}</p>\n        </header>\n        <div class=\"card-content\">\n          <div class=\"content\">\n            <div class=\"field\">\n              <label class=\"label\" for=\"id\">id</label>\n              <label class=\"input\" name=\"id\" readonly>{{ villain.id }}</label>\n            </div>\n            <div class=\"field\">\n              <label class=\"label\" for=\"firstName\">first name</label>\n              <input\n                class=\"input\"\n                name=\"firstName\"\n                v-model=\"villain.firstName\"\n              />\n            </div>\n            <div class=\"field\">\n              <label class=\"label\" for=\"lastName\">last name</label>\n              <input class=\"input\" name=\"lastName\" v-model=\"villain.lastName\" />\n            </div>\n            <div class=\"field\">\n              <label class=\"label\" for=\"description\">description</label>\n              <input\n                class=\"input\"\n                name=\"description\"\n                v-model=\"villain.description\"\n              />\n            </div>\n          </div>\n        </div>\n        <footer class=\"card-footer\">\n          <button\n            class=\"link card-footer-item cancel-button\"\n            @click=\"cancelVillain()\"\n          >\n            <i class=\"fas fa-undo\"></i>\n            <span>Cancel</span>\n          </button>\n          <button class=\"link card-footer-item\" @click=\"saveVillain()\">\n            <i class=\"fas fa-save\"></i>\n            <span>Save</span>\n          </button>\n        </footer>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex';\n\nexport default {\n  name: 'VillainDetail',\n  props: {\n    id: {\n      type: Number,\n      default: 0,\n    },\n  },\n  data() {\n    return {\n      villain: {},\n    };\n  },\n  created() {\n    if (this.isAddMode) {\n      this.villain = {\n        id: undefined,\n        firstName: '',\n        lastName: '',\n        description: '',\n      };\n    } else {\n      this.villain = { ...this.getVillainById(this.id) };\n    }\n  },\n  computed: {\n    ...mapGetters(['getVillainById']),\n    isAddMode() {\n      return !this.id;\n    },\n    title() {\n      return `${this.isAddMode ? 'Add' : 'Edit'} Villain`;\n    },\n  },\n  methods: {\n    ...mapActions(['updateVillainAction', 'addVillainAction']),\n    cancelVillain() {\n      this.$router.push({ name: 'villains' });\n    },\n    async saveVillain() {\n      this.villain.id\n        ? await this.updateVillainAction(this.villain)\n        : await this.addVillainAction(this.villain);\n      this.$router.push({ name: 'villains' });\n    },\n  },\n};\n</script>\n"]}]}