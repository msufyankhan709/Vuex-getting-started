{"remainingRequest":"/home/msufyan/Desktop/Vue/vue-getting-started/xx-final/vue-heroes/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/msufyan/Desktop/Vue/vue-getting-started/xx-final/vue-heroes/src/views/heroes.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/msufyan/Desktop/Vue/vue-getting-started/xx-final/vue-heroes/src/views/heroes.vue","mtime":1633337813766},{"path":"/home/msufyan/Desktop/Vue/vue-getting-started/xx-final/vue-heroes/node_modules/cache-loader/dist/cjs.js","mtime":1633525790131},{"path":"/home/msufyan/Desktop/Vue/vue-getting-started/xx-final/vue-heroes/node_modules/babel-loader/lib/index.js","mtime":1633525790671},{"path":"/home/msufyan/Desktop/Vue/vue-getting-started/xx-final/vue-heroes/node_modules/cache-loader/dist/cjs.js","mtime":1633525790131},{"path":"/home/msufyan/Desktop/Vue/vue-getting-started/xx-final/vue-heroes/node_modules/vue-loader/lib/index.js","mtime":1633525791335}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapActions, mapState } from 'vuex';\nimport Modal from '@/components/modal';\n\nexport default {\n  name: 'Heroes',\n  data() {\n    return {\n      heroToDelete: null,\n      message: '',\n      showModal: false,\n    };\n  },\n  components: {\n    Modal,\n  },\n  async created() {\n    await this.loadHeroes();\n  },\n  methods: {\n    ...mapActions(['getHeroesAction', 'deleteHeroAction']),\n    askToDelete(hero) {\n      this.heroToDelete = hero;\n      this.showModal = true;\n    },\n    closeModal() {\n      this.showModal = false;\n    },\n    async deleteHero() {\n      this.closeModal();\n      if (this.heroToDelete) {\n        await this.deleteHeroAction(this.heroToDelete);\n      }\n      await this.loadHeroes();\n    },\n    async loadHeroes() {\n      this.message = 'getting the heroes, please be patient';\n      await this.getHeroesAction();\n      this.message = '';\n    },\n  },\n  computed: {\n    ...mapState(['heroes']),\n    modalMessage() {\n      const name =\n        this.heroToDelete && this.heroToDelete.fullName\n          ? this.heroToDelete.fullName\n          : '';\n      return `Would you like to delete ${name} ?`;\n    },\n  },\n};\n",{"version":3,"sources":["heroes.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"heroes.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"content-container\">\n    <div class=\"columns\">\n      <div class=\"column is-8\">\n        <div class=\"section content-title-group\">\n          <h2 class=\"title\">Heroes</h2>\n          <button class=\"button refresh-button\" @click=\"loadHeroes()\">\n            <i class=\"fas fa-sync\"></i>\n          </button>\n          <router-link\n            tag=\"button\"\n            class=\"button add-button\"\n            :to=\"{ name: 'hero-detail', params: { id: 0 } }\"\n          >\n            <i class=\"fas fa-plus\"></i>\n          </router-link>\n          <ul>\n            <li v-for=\"hero in heroes\" :key=\"hero.id\">\n              <div class=\"card\">\n                <div class=\"card-content\">\n                  <div class=\"content\">\n                    <div :key=\"hero.name\" class=\"name\">\n                      {{ hero.firstName }} {{ hero.lastName }}\n                    </div>\n                    <div class=\"description\">{{ hero.description }}</div>\n                  </div>\n                </div>\n                <footer class=\"card-footer\">\n                  <button\n                    class=\"link card-footer-item\"\n                    @click=\"askToDelete(hero)\"\n                  >\n                    <i class=\"fas fa-trash\"></i>\n                    <span>Delete</span>\n                  </button>\n                  <router-link\n                    tag=\"button\"\n                    class=\"link card-footer-item\"\n                    :to=\"{ name: 'hero-detail', params: { id: hero.id } }\"\n                  >\n                    <i class=\"fas fa-check\"></i>\n                    <span>Select</span>\n                  </router-link>\n                </footer>\n              </div>\n            </li>\n          </ul>\n        </div>\n        <div class=\"notification is-info\" v-show=\"message\">{{ message }}</div>\n      </div>\n    </div>\n    <Modal\n      :message=\"modalMessage\"\n      :isOpen=\"showModal\"\n      @handleNo=\"closeModal\"\n      @handleYes=\"deleteHero\"\n    >\n    </Modal>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapState } from 'vuex';\nimport Modal from '@/components/modal';\n\nexport default {\n  name: 'Heroes',\n  data() {\n    return {\n      heroToDelete: null,\n      message: '',\n      showModal: false,\n    };\n  },\n  components: {\n    Modal,\n  },\n  async created() {\n    await this.loadHeroes();\n  },\n  methods: {\n    ...mapActions(['getHeroesAction', 'deleteHeroAction']),\n    askToDelete(hero) {\n      this.heroToDelete = hero;\n      this.showModal = true;\n    },\n    closeModal() {\n      this.showModal = false;\n    },\n    async deleteHero() {\n      this.closeModal();\n      if (this.heroToDelete) {\n        await this.deleteHeroAction(this.heroToDelete);\n      }\n      await this.loadHeroes();\n    },\n    async loadHeroes() {\n      this.message = 'getting the heroes, please be patient';\n      await this.getHeroesAction();\n      this.message = '';\n    },\n  },\n  computed: {\n    ...mapState(['heroes']),\n    modalMessage() {\n      const name =\n        this.heroToDelete && this.heroToDelete.fullName\n          ? this.heroToDelete.fullName\n          : '';\n      return `Would you like to delete ${name} ?`;\n    },\n  },\n};\n</script>\n"]}]}