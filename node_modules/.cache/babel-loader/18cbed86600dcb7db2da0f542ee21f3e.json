{"remainingRequest":"/home/msufyan/Desktop/Vue/vue-getting-started/xx-final/vue-heroes/node_modules/babel-loader/lib/index.js!/home/msufyan/Desktop/Vue/vue-getting-started/xx-final/vue-heroes/node_modules/eslint-loader/index.js??ref--13-0!/home/msufyan/Desktop/Vue/vue-getting-started/xx-final/vue-heroes/src/store/index.js","dependencies":[{"path":"/home/msufyan/Desktop/Vue/vue-getting-started/xx-final/vue-heroes/src/store/index.js","mtime":1633337813766},{"path":"/home/msufyan/Desktop/Vue/vue-getting-started/xx-final/vue-heroes/node_modules/cache-loader/dist/cjs.js","mtime":1633525790131},{"path":"/home/msufyan/Desktop/Vue/vue-getting-started/xx-final/vue-heroes/node_modules/babel-loader/lib/index.js","mtime":1633525790671},{"path":"/home/msufyan/Desktop/Vue/vue-getting-started/xx-final/vue-heroes/node_modules/eslint-loader/index.js","mtime":1633525788947}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/msufyan/Desktop/Vue/vue-getting-started/xx-final/vue-heroes/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/msufyan/Desktop/Vue/vue-getting-started/xx-final/vue-heroes/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/msufyan/Desktop/Vue/vue-getting-started/xx-final/vue-heroes/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.array.find-index\";\n\nvar _mutations;\n\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport { dataService } from \"../shared\";\nimport { ADD_HERO, DELETE_HERO, GET_HEROES, UPDATE_HERO, ADD_VILLAIN, DELETE_VILLAIN, GET_VILLAINS, UPDATE_VILLAIN } from \"./mutation-types\";\nVue.use(Vuex);\n\nvar state = function state() {\n  return {\n    heroes: [],\n    villains: []\n  };\n};\n\nvar mutations = (_mutations = {}, _defineProperty(_mutations, ADD_HERO, function (state, hero) {\n  state.heroes.unshift(hero); // mutable addition\n}), _defineProperty(_mutations, UPDATE_HERO, function (state, hero) {\n  var index = state.heroes.findIndex(function (h) {\n    return h.id === hero.id;\n  });\n  state.heroes.splice(index, 1, hero);\n  state.heroes = _toConsumableArray(state.heroes);\n}), _defineProperty(_mutations, GET_HEROES, function (state, heroes) {\n  state.heroes = heroes;\n}), _defineProperty(_mutations, DELETE_HERO, function (state, heroId) {\n  state.heroes = _toConsumableArray(state.heroes.filter(function (p) {\n    return p.id !== heroId;\n  }));\n}), _defineProperty(_mutations, ADD_VILLAIN, function (state, villain) {\n  state.villains.unshift(villain); // mutable addition\n}), _defineProperty(_mutations, UPDATE_VILLAIN, function (state, villain) {\n  var index = state.villains.findIndex(function (h) {\n    return h.id === villain.id;\n  });\n  state.villains.splice(index, 1, villain);\n  state.villains = _toConsumableArray(state.villains);\n}), _defineProperty(_mutations, GET_VILLAINS, function (state, villains) {\n  state.villains = villains;\n}), _defineProperty(_mutations, DELETE_VILLAIN, function (state, villainId) {\n  state.villains = _toConsumableArray(state.villains.filter(function (p) {\n    return p.id !== villainId;\n  }));\n}), _mutations);\nvar actions = {\n  // actions let us get to ({ state, getters, commit, dispatch }) {\n  addHeroAction: function () {\n    var _addHeroAction = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(_ref, hero) {\n      var commit, addedHero;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return dataService.addHero(hero);\n\n            case 3:\n              addedHero = _context.sent;\n              commit(ADD_HERO, addedHero);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function addHeroAction(_x, _x2) {\n      return _addHeroAction.apply(this, arguments);\n    }\n\n    return addHeroAction;\n  }(),\n  deleteHeroAction: function () {\n    var _deleteHeroAction = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(_ref2, hero) {\n      var commit, deletedHeroId;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return dataService.deleteHero(hero);\n\n            case 3:\n              deletedHeroId = _context2.sent;\n              commit(DELETE_HERO, deletedHeroId);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function deleteHeroAction(_x3, _x4) {\n      return _deleteHeroAction.apply(this, arguments);\n    }\n\n    return deleteHeroAction;\n  }(),\n  getHeroesAction: function () {\n    var _getHeroesAction = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(_ref3) {\n      var commit, heroes;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              _context3.next = 3;\n              return dataService.getHeroes();\n\n            case 3:\n              heroes = _context3.sent;\n              commit(GET_HEROES, heroes);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function getHeroesAction(_x5) {\n      return _getHeroesAction.apply(this, arguments);\n    }\n\n    return getHeroesAction;\n  }(),\n  updateHeroAction: function () {\n    var _updateHeroAction = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(_ref4, hero) {\n      var commit, updatedHero;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref4.commit;\n              _context4.next = 3;\n              return dataService.updateHero(hero);\n\n            case 3:\n              updatedHero = _context4.sent;\n              commit(UPDATE_HERO, updatedHero);\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function updateHeroAction(_x6, _x7) {\n      return _updateHeroAction.apply(this, arguments);\n    }\n\n    return updateHeroAction;\n  }(),\n  addVillainAction: function () {\n    var _addVillainAction = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5(_ref5, villain) {\n      var commit, addedVillain;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref5.commit;\n              _context5.next = 3;\n              return dataService.addVillain(villain);\n\n            case 3:\n              addedVillain = _context5.sent;\n              commit(ADD_VILLAIN, addedVillain);\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function addVillainAction(_x8, _x9) {\n      return _addVillainAction.apply(this, arguments);\n    }\n\n    return addVillainAction;\n  }(),\n  deleteVillainAction: function () {\n    var _deleteVillainAction = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee6(_ref6, villain) {\n      var commit, deletedVillainId;\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              commit = _ref6.commit;\n              _context6.next = 3;\n              return dataService.deleteVillain(villain);\n\n            case 3:\n              deletedVillainId = _context6.sent;\n              commit(DELETE_VILLAIN, deletedVillainId);\n\n            case 5:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    function deleteVillainAction(_x10, _x11) {\n      return _deleteVillainAction.apply(this, arguments);\n    }\n\n    return deleteVillainAction;\n  }(),\n  getVillainsAction: function () {\n    var _getVillainsAction = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee7(_ref7) {\n      var commit, villains;\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              commit = _ref7.commit;\n              _context7.next = 3;\n              return dataService.getVillains();\n\n            case 3:\n              villains = _context7.sent;\n              commit(GET_VILLAINS, villains);\n\n            case 5:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    function getVillainsAction(_x12) {\n      return _getVillainsAction.apply(this, arguments);\n    }\n\n    return getVillainsAction;\n  }(),\n  updateVillainAction: function () {\n    var _updateVillainAction = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee8(_ref8, villain) {\n      var commit, updatedVillain;\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              commit = _ref8.commit;\n              _context8.next = 3;\n              return dataService.updateVillain(villain);\n\n            case 3:\n              updatedVillain = _context8.sent;\n              commit(UPDATE_VILLAIN, updatedVillain);\n\n            case 5:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    function updateVillainAction(_x13, _x14) {\n      return _updateVillainAction.apply(this, arguments);\n    }\n\n    return updateVillainAction;\n  }()\n};\nvar getters = {\n  // parameterized getters are not cached. so this is just a convenience to get the state.\n  getHeroById: function getHeroById(state) {\n    return function (id) {\n      return state.heroes.find(function (h) {\n        return h.id === id;\n      });\n    };\n  },\n  getVillainById: function getVillainById(state) {\n    return function (id) {\n      return state.villains.find(function (v) {\n        return v.id === id;\n      });\n    };\n  }\n};\nexport default new Vuex.Store({\n  strict: process.env.NODE_ENV !== 'production',\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n});",{"version":3,"sources":["/home/msufyan/Desktop/Vue/vue-getting-started/xx-final/vue-heroes/src/store/index.js"],"names":["Vue","Vuex","dataService","ADD_HERO","DELETE_HERO","GET_HEROES","UPDATE_HERO","ADD_VILLAIN","DELETE_VILLAIN","GET_VILLAINS","UPDATE_VILLAIN","use","state","heroes","villains","mutations","hero","unshift","index","findIndex","h","id","splice","heroId","filter","p","villain","villainId","actions","addHeroAction","commit","addHero","addedHero","deleteHeroAction","deleteHero","deletedHeroId","getHeroesAction","getHeroes","updateHeroAction","updateHero","updatedHero","addVillainAction","addVillain","addedVillain","deleteVillainAction","deleteVillain","deletedVillainId","getVillainsAction","getVillains","updateVillainAction","updateVillain","updatedVillain","getters","getHeroById","find","getVillainById","v","Store","strict","process","env","NODE_ENV"],"mappings":"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","sourcesContent":["import Vue from 'vue';\nimport Vuex from 'vuex';\n\nimport { dataService } from '../shared';\nimport {\n  ADD_HERO,\n  DELETE_HERO,\n  GET_HEROES,\n  UPDATE_HERO,\n  ADD_VILLAIN,\n  DELETE_VILLAIN,\n  GET_VILLAINS,\n  UPDATE_VILLAIN,\n} from './mutation-types';\n\nVue.use(Vuex);\n\nconst state = () => ({\n  heroes: [],\n  villains: [],\n});\n\nconst mutations = {\n  [ADD_HERO](state, hero) {\n    state.heroes.unshift(hero); // mutable addition\n  },\n  [UPDATE_HERO](state, hero) {\n    const index = state.heroes.findIndex(h => h.id === hero.id);\n    state.heroes.splice(index, 1, hero);\n    state.heroes = [...state.heroes];\n  },\n  [GET_HEROES](state, heroes) {\n    state.heroes = heroes;\n  },\n  [DELETE_HERO](state, heroId) {\n    state.heroes = [...state.heroes.filter(p => p.id !== heroId)];\n  },\n  [ADD_VILLAIN](state, villain) {\n    state.villains.unshift(villain); // mutable addition\n  },\n  [UPDATE_VILLAIN](state, villain) {\n    const index = state.villains.findIndex(h => h.id === villain.id);\n    state.villains.splice(index, 1, villain);\n    state.villains = [...state.villains];\n  },\n  [GET_VILLAINS](state, villains) {\n    state.villains = villains;\n  },\n  [DELETE_VILLAIN](state, villainId) {\n    state.villains = [...state.villains.filter(p => p.id !== villainId)];\n  },\n};\n\nconst actions = {\n  // actions let us get to ({ state, getters, commit, dispatch }) {\n  async addHeroAction({ commit }, hero) {\n    const addedHero = await dataService.addHero(hero);\n    commit(ADD_HERO, addedHero);\n  },\n  async deleteHeroAction({ commit }, hero) {\n    const deletedHeroId = await dataService.deleteHero(hero);\n    commit(DELETE_HERO, deletedHeroId);\n  },\n  async getHeroesAction({ commit }) {\n    const heroes = await dataService.getHeroes();\n    commit(GET_HEROES, heroes);\n  },\n  async updateHeroAction({ commit }, hero) {\n    const updatedHero = await dataService.updateHero(hero);\n    commit(UPDATE_HERO, updatedHero);\n  },\n  async addVillainAction({ commit }, villain) {\n    const addedVillain = await dataService.addVillain(villain);\n    commit(ADD_VILLAIN, addedVillain);\n  },\n  async deleteVillainAction({ commit }, villain) {\n    const deletedVillainId = await dataService.deleteVillain(villain);\n    commit(DELETE_VILLAIN, deletedVillainId);\n  },\n  async getVillainsAction({ commit }) {\n    const villains = await dataService.getVillains();\n    commit(GET_VILLAINS, villains);\n  },\n  async updateVillainAction({ commit }, villain) {\n    const updatedVillain = await dataService.updateVillain(villain);\n    commit(UPDATE_VILLAIN, updatedVillain);\n  },\n};\n\nconst getters = {\n  // parameterized getters are not cached. so this is just a convenience to get the state.\n  getHeroById: state => id => state.heroes.find(h => h.id === id),\n  getVillainById: state => id => state.villains.find(v => v.id === id),\n};\n\nexport default new Vuex.Store({\n  strict: process.env.NODE_ENV !== 'production',\n  state,\n  mutations,\n  actions,\n  getters,\n});\n"]}]}