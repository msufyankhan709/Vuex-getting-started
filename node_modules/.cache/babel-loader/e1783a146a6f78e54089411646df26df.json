{"remainingRequest":"/home/msufyan/Desktop/Vue/vue-getting-started/xx-final/vue-heroes/node_modules/babel-loader/lib/index.js!/home/msufyan/Desktop/Vue/vue-getting-started/xx-final/vue-heroes/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/msufyan/Desktop/Vue/vue-getting-started/xx-final/vue-heroes/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/msufyan/Desktop/Vue/vue-getting-started/xx-final/vue-heroes/src/views/villains.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/msufyan/Desktop/Vue/vue-getting-started/xx-final/vue-heroes/src/views/villains.vue","mtime":1633337813766},{"path":"/home/msufyan/Desktop/Vue/vue-getting-started/xx-final/vue-heroes/node_modules/cache-loader/dist/cjs.js","mtime":1633525790131},{"path":"/home/msufyan/Desktop/Vue/vue-getting-started/xx-final/vue-heroes/node_modules/babel-loader/lib/index.js","mtime":1633525790671},{"path":"/home/msufyan/Desktop/Vue/vue-getting-started/xx-final/vue-heroes/node_modules/cache-loader/dist/cjs.js","mtime":1633525790131},{"path":"/home/msufyan/Desktop/Vue/vue-getting-started/xx-final/vue-heroes/node_modules/vue-loader/lib/index.js","mtime":1633525791335}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/msufyan/Desktop/Vue/vue-getting-started/xx-final/vue-heroes/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/msufyan/Desktop/Vue/vue-getting-started/xx-final/vue-heroes/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapState } from 'vuex';\nimport Modal from '@/components/modal';\nexport default {\n  name: 'Villains',\n  data: function data() {\n    return {\n      villainToDelete: null,\n      message: '',\n      showModal: false\n    };\n  },\n  components: {\n    Modal: Modal\n  },\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.loadVillains();\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  methods: _objectSpread({}, mapActions(['getVillainsAction', 'deleteVillainAction']), {\n    askToDelete: function askToDelete(villain) {\n      this.villainToDelete = villain;\n      this.showModal = true;\n    },\n    closeModal: function closeModal() {\n      this.showModal = false;\n    },\n    deleteVillain: function () {\n      var _deleteVillain = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.closeModal();\n\n                if (!this.villainToDelete) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                _context2.next = 4;\n                return this.deleteVillainAction(this.villainToDelete);\n\n              case 4:\n                _context2.next = 6;\n                return this.loadVillains();\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function deleteVillain() {\n        return _deleteVillain.apply(this, arguments);\n      }\n\n      return deleteVillain;\n    }(),\n    loadVillains: function () {\n      var _loadVillains = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.message = 'getting the villains, please be patient';\n                _context3.next = 3;\n                return this.getVillainsAction();\n\n              case 3:\n                this.message = '';\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadVillains() {\n        return _loadVillains.apply(this, arguments);\n      }\n\n      return loadVillains;\n    }()\n  }),\n  computed: _objectSpread({}, mapState(['villains']), {\n    modalMessage: function modalMessage() {\n      var name = this.villainToDelete && this.villainToDelete.fullName ? this.villainToDelete.fullName : '';\n      return \"Would you like to delete \".concat(name, \" ?\");\n    }\n  })\n};",{"version":3,"sources":["villains.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA,SAAA,UAAA,EAAA,QAAA,QAAA,MAAA;AACA,OAAA,KAAA,MAAA,oBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,eAAA,EAAA,IADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,SAAA,EAAA;AAHA,KAAA;AAKA,GARA;AASA,EAAA,UAAA,EAAA;AACA,IAAA,KAAA,EAAA;AADA,GATA;AAYA,EAAA,OAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAaA,KAAA,YAAA,EAbA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAeA,EAAA,OAAA,oBACA,UAAA,CAAA,CAAA,mBAAA,EAAA,qBAAA,CAAA,CADA;AAEA,IAAA,WAFA,uBAEA,OAFA,EAEA;AACA,WAAA,eAAA,GAAA,OAAA;AACA,WAAA,SAAA,GAAA,IAAA;AACA,KALA;AAMA,IAAA,UANA,wBAMA;AACA,WAAA,SAAA,GAAA,KAAA;AACA,KARA;AASA,IAAA,aATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA,qBAAA,UAAA;;AAVA,qBAWA,KAAA,eAXA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAYA,KAAA,mBAAA,CAAA,KAAA,eAAA,CAZA;;AAAA;AAAA;AAAA,uBAcA,KAAA,YAAA,EAdA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAgBA,IAAA,YAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA,qBAAA,OAAA,GAAA,yCAAA;AAjBA;AAAA,uBAkBA,KAAA,iBAAA,EAlBA;;AAAA;AAmBA,qBAAA,OAAA,GAAA,EAAA;;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,IAfA;AAqCA,EAAA,QAAA,oBACA,QAAA,CAAA,CAAA,UAAA,CAAA,CADA;AAEA,IAAA,YAFA,0BAEA;AACA,UAAA,IAAA,GACA,KAAA,eAAA,IAAA,KAAA,eAAA,CAAA,QAAA,GACA,KAAA,eAAA,CAAA,QADA,GAEA,EAHA;AAIA,gDAAA,IAAA;AACA;AARA;AArCA,CAAA","sourcesContent":["<template>\n  <div class=\"content-container\">\n    <div class=\"columns\">\n      <div class=\"column is-8\">\n        <div class=\"section content-title-group\">\n          <h2 class=\"title\">Villains</h2>\n          <button class=\"button refresh-button\" @click=\"loadVillains()\">\n            <i class=\"fas fa-sync\"></i>\n          </button>\n          <router-link\n            tag=\"button\"\n            class=\"button add-button\"\n            :to=\"{ name: 'villain-detail', params: { id: 0 } }\"\n          >\n            <i class=\"fas fa-plus\"></i>\n          </router-link>\n          <ul>\n            <li v-for=\"villain in villains\" :key=\"villain.id\">\n              <div class=\"card\">\n                <div class=\"card-content\">\n                  <div class=\"content\">\n                    <div :key=\"villain.name\" class=\"name\">\n                      {{ villain.firstName }} {{ villain.lastName }}\n                    </div>\n                    <div class=\"description\">{{ villain.description }}</div>\n                  </div>\n                </div>\n                <footer class=\"card-footer\">\n                  <button\n                    class=\"link card-footer-item\"\n                    @click=\"askToDelete(villain)\"\n                  >\n                    <i class=\"fas fa-trash\"></i>\n                    <span>Delete</span>\n                  </button>\n                  <router-link\n                    tag=\"button\"\n                    class=\"link card-footer-item\"\n                    :to=\"{ name: 'villain-detail', params: { id: villain.id } }\"\n                  >\n                    <i class=\"fas fa-check\"></i>\n                    <span>Select</span>\n                  </router-link>\n                </footer>\n              </div>\n            </li>\n          </ul>\n        </div>\n        <div class=\"notification is-info\" v-show=\"message\">{{ message }}</div>\n      </div>\n    </div>\n    <Modal\n      :message=\"modalMessage\"\n      :isOpen=\"showModal\"\n      @handleNo=\"closeModal\"\n      @handleYes=\"deleteVillain\"\n    >\n    </Modal>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapState } from 'vuex';\nimport Modal from '@/components/modal';\n\nexport default {\n  name: 'Villains',\n  data() {\n    return {\n      villainToDelete: null,\n      message: '',\n      showModal: false,\n    };\n  },\n  components: {\n    Modal,\n  },\n  async created() {\n    await this.loadVillains();\n  },\n  methods: {\n    ...mapActions(['getVillainsAction', 'deleteVillainAction']),\n    askToDelete(villain) {\n      this.villainToDelete = villain;\n      this.showModal = true;\n    },\n    closeModal() {\n      this.showModal = false;\n    },\n    async deleteVillain() {\n      this.closeModal();\n      if (this.villainToDelete) {\n        await this.deleteVillainAction(this.villainToDelete);\n      }\n      await this.loadVillains();\n    },\n    async loadVillains() {\n      this.message = 'getting the villains, please be patient';\n      await this.getVillainsAction();\n      this.message = '';\n    },\n  },\n  computed: {\n    ...mapState(['villains']),\n    modalMessage() {\n      const name =\n        this.villainToDelete && this.villainToDelete.fullName\n          ? this.villainToDelete.fullName\n          : '';\n      return `Would you like to delete ${name} ?`;\n    },\n  },\n};\n</script>\n"],"sourceRoot":"src/views"}]}